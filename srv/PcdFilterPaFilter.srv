# Filter format - each string will follow this format
#
# [!]<type> <separator> <sizes> <tf> [<tf_offset>] [<tf2> [<tf2_offset>]] [# <comment>]
#   !:
#     inverts the filter - normally the points within the volume
#     will be filtered out
#   type:
#     cube     - specified by its sidelength (1 parameter)
#     sphere   - specified by its radius     (1 parameter)
#     block    - cuboid specified by its three sidelengths
#                in x,y and z direction (3 parameters)
#     cylinder - specified by its radius and its height
#                (2 parameters)
#     link     - cylinder centered around the two given tfs
#                specified by its radius and its overshoot
#                (2 parameters)
#     cone     - cone headed at fist tf and pointing to second tf
#                specified by its height and its ratio (radius/height)
#                (2 parameters)
#   separator:
#     ":"      - specified filter is required
#     "?"      - specified may be skipped if TF is missing
#   sizes:
#     depends on the type of filter (see above)
#   tf:
#     frame id for the filtered objects
#   tf_offset:
#     additional offset relative to frame id
#     order of parameter - x y z  qx qy qz qw
#     missing parameters will be set to "0"
#     if qw is not set then qw = sqrt(1 - qx^2 - qy^2 - qz^2)
#   tf2 and tf2_offset:
#     only valid for type "link"
#     for description see above (tf and tf_offset)
#   #:
#     every character following '#' is ignored
#     this can be used to give a short comment
#
#
# examples:
#
#   cube: 3 base_footprint
#     removes every point within cube
#     center of cube is aligned with base_footprint
#     sidelength is 3 [meters], corners will be at [+/-1.5 , +/- 1.5, +/- 1.5]
#
#   !sphere: 2.3 map
#     only points within sphere will stay
#     center of sphere is aligned with map
#     radius is 2.3 [meters], diameter is 4.6 [meters]
#
#   block: 1 2 3 base_link 0.5 1 1.5
#     removes every point within cuboid
#     one corner of the cuboid is at center of base_link
#       (due to the additional offsets)
#     two opposite corners are at [0, 0, 0] and [1, 2, 3]
#
#   link: 0.2 0 arm_link1 arm_link2
#     removes every point within cylinder
#     the center of each surface is exactly at origin of one frame
#       (no overshoot)
#     radius is 0.2 [meters]
#     the height depends on the relative position of the two frames
#
#   cone: 10 1 laser pan_tilt_tilt_link
#     removes every point within cone
#     the top of cone will be at the laser and the centerline will go
#     straight through pan_tilt_tilt_link
#       (no overshoot)
#     height is 10 [meters]
#     the angle at the top is 90 degrees (ratio 1:1)

string[] new_filter
---
string[] current_filter
